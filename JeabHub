-- üê• Jeab Hub V.1 | Full Script
-- UI ‡πÇ‡∏ó‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å + Logic Scylla & Aurora Mode

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RS = game:GetService("ReplicatedStorage")

-- ================== Config ==================
local sundialName = "Sundial Totem"
local auroraName = "Aurora Totem"
local rodKeyword = "Rod Of The Zenith"

-- ================== State ==================
local scyllaMode = false
local auroraMode = false
local debugVisible = false
local scyllaActive = false
local isDay = true

-- Debug Log Data
local debugLines = {}
local maxLogs = 50

-- ================== Utils ==================
local function useItem(itemName)
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = char:WaitForChild("Humanoid")

    local tool = char:FindFirstChildOfClass("Tool")
    if tool and string.find(tool.Name, itemName) then
        tool:Activate()
        return true
    end

    local backpack = LocalPlayer.Backpack
    for _, toolInBackpack in pairs(backpack:GetChildren()) do
        if string.find(toolInBackpack.Name, itemName) then
            humanoid:EquipTool(toolInBackpack)
            task.wait()
            toolInBackpack:Activate()
            return true
        end
    end
    return false
end

local function equipItem(itemKeyword)
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = char:WaitForChild("Humanoid")

    local tool = char:FindFirstChildOfClass("Tool")
    if tool and string.find(tool.Name, itemKeyword) then
        return true
    end

    local backpack = LocalPlayer.Backpack
    for _, toolInBackpack in pairs(backpack:GetChildren()) do
        if string.find(toolInBackpack.Name, itemKeyword) then
            humanoid:EquipTool(toolInBackpack)
            return true
        end
    end
    return false
end

local function debugLog(msg, color)
    if not debugVisible then return end
    table.insert(debugLines, msg)
    if #debugLines > maxLogs then
        table.remove(debugLines, 1)
        if DebugScroll:FindFirstChildOfClass("TextLabel") then
            DebugScroll:FindFirstChildOfClass("TextLabel"):Destroy()
        end
    end
    local line = Instance.new("TextLabel")
    line.Size = UDim2.new(1, 0, 0, 20)
    line.Text = msg
    line.TextColor3 = color or Color3.fromRGB(50, 50, 50)
    line.BackgroundTransparency = 1
    line.TextXAlignment = Enum.TextXAlignment.Left
    line.Font = Enum.Font.SourceSans
    line.TextSize = 16
    line.Parent = DebugScroll
    DebugScroll.CanvasSize = UDim2.new(0, 0, 0, UIList.AbsoluteContentSize.Y)
    DebugScroll.CanvasPosition = Vector2.new(0, DebugScroll.CanvasSize.Y.Offset)
end

-- ================== GUI ‡∏´‡∏•‡∏±‡∏Å ==================
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- Frame ‡∏´‡∏•‡∏±‡∏Å
local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 500, 0, 300)
Frame.Position = UDim2.new(0.2, 0, 0.2, 0)
Frame.BackgroundColor3 = Color3.fromRGB(255, 220, 150)
Frame.Active = true
Frame.Draggable = true
Frame.BorderSizePixel = 0
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 12)

-- Header
local Header = Instance.new("TextLabel")
Header.Parent = Frame
Header.Size = UDim2.new(1, 0, 0, 40)
Header.BackgroundColor3 = Color3.fromRGB(255, 190, 100)
Header.Text = "üê• Jeab Hub | V.1"
Header.Font = Enum.Font.SourceSansBold
Header.TextSize = 22
Header.TextColor3 = Color3.fromRGB(80, 50, 0)

-- Sidebar
local Sidebar = Instance.new("Frame")
Sidebar.Parent = Frame
Sidebar.Size = UDim2.new(0, 120, 1, -40)
Sidebar.Position = UDim2.new(0, 0, 0, 40)
Sidebar.BackgroundColor3 = Color3.fromRGB(255, 210, 120)

local SidebarLayout = Instance.new("UIListLayout", Sidebar)
SidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Content
local Content = Instance.new("Frame")
Content.Parent = Frame
Content.Size = UDim2.new(1, -120, 1, -40)
Content.Position = UDim2.new(0, 120, 0, 40)
Content.BackgroundColor3 = Color3.fromRGB(255, 240, 200)

-- ================== Sidebar Buttons ==================
local categories = {"‡∏™‡∏Å‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏ö‡∏π‡∏ö‡∏π‡πâ", "‡πÄ‡∏°‡πá‡∏Å‡∏Å‡∏≤‡πÇ‡∏•‡∏î‡πâ‡∏ß‡∏ô", "‡∏ã‡∏±‡∏ô‡πÑ‡∏≠‡∏î‡∏≠", "‡∏´‡∏°‡∏∂‡∏Å‡∏¢‡πä‡∏≤‡∏Å‡∏´‡∏°‡∏∂‡∏Å‡∏õ‡∏µ‡∏®‡∏≤‡∏à"}
local contentFrames = {}

for _, name in ipairs(categories) do
    local btn = Instance.new("TextButton")
    btn.Parent = Sidebar
    btn.Size = UDim2.new(1, -10, 0, 30)
    btn.BackgroundColor3 = Color3.fromRGB(255, 220, 160)
    btn.Text = name
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 16
    btn.TextColor3 = Color3.fromRGB(80, 50, 0)
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)

    local frame = Instance.new("Frame")
    frame.Parent = Content
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.Visible = false
    frame.BackgroundTransparency = 1
    contentFrames[name] = frame

    btn.MouseButton1Click:Connect(function()
        for _, f in pairs(contentFrames) do f.Visible = false end
        frame.Visible = true
    end)
end

-- ================== ‡∏™‡∏Å‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏ö‡∏π‡∏ö‡∏π‡πâ Content ==================
local scyllaFrame = contentFrames["‡∏™‡∏Å‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏ö‡∏π‡∏ö‡∏π‡πâ"]

-- ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
local desc = Instance.new("TextLabel")
desc.Parent = scyllaFrame
desc.Size = UDim2.new(1, -20, 0, 30)
desc.Position = UDim2.new(0, 10, 0, 5)
desc.BackgroundTransparency = 1
desc.Text = "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Rod Of The Zenith"
desc.Font = Enum.Font.SourceSansItalic
desc.TextSize = 16
desc.TextColor3 = Color3.fromRGB(80, 50, 0)

-- ‡∏õ‡∏∏‡πà‡∏° Scylla Mode
local scyllaBtn = Instance.new("TextButton")
scyllaBtn.Parent = scyllaFrame
scyllaBtn.Size = UDim2.new(0, 250, 0, 40)
scyllaBtn.Position = UDim2.new(0, 30, 0, 50)
scyllaBtn.Text = "‚öîÔ∏è Scylla Mode : OFF"
scyllaBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
scyllaBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
scyllaBtn.Font = Enum.Font.SourceSansBold
scyllaBtn.TextSize = 18
Instance.new("UICorner", scyllaBtn).CornerRadius = UDim.new(0, 12)

-- ‡∏õ‡∏∏‡πà‡∏° Aurora Mode
local auroraBtn = Instance.new("TextButton")
auroraBtn.Parent = scyllaFrame
auroraBtn.Size = UDim2.new(0, 250, 0, 40)
auroraBtn.Position = UDim2.new(0, 30, 0, 100)
auroraBtn.Text = "üåå Aurora Mode : OFF"
auroraBtn.BackgroundColor3 = Color3.fromRGB(50, 120, 50)
auroraBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
auroraBtn.Font = Enum.Font.SourceSansBold
auroraBtn.TextSize = 18
Instance.new("UICorner", auroraBtn).CornerRadius = UDim.new(0, 12)

-- ‡∏õ‡∏∏‡πà‡∏° Debug
local debugBtn = Instance.new("TextButton")
debugBtn.Parent = scyllaFrame
debugBtn.Size = UDim2.new(0, 150, 0, 35)
debugBtn.Position = UDim2.new(0, 30, 0, 160)
debugBtn.Text = "Debug: OFF"
debugBtn.BackgroundColor3 = Color3.fromRGB(150, 100, 50)
debugBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
debugBtn.Font = Enum.Font.SourceSansBold
debugBtn.TextSize = 16
Instance.new("UICorner", debugBtn).CornerRadius = UDim.new(0, 10)

-- ================== Debug Panel ==================
local DebugFrame = Instance.new("Frame")
DebugFrame.Parent = ScreenGui
DebugFrame.Size = UDim2.new(0, 320, 0, 200)
DebugFrame.Position = UDim2.new(0.6, 0, 0.2, 0)
DebugFrame.BackgroundColor3 = Color3.fromRGB(255, 230, 180)
DebugFrame.Visible = false
Instance.new("UICorner", DebugFrame).CornerRadius = UDim.new(0, 10)

local DebugTitle = Instance.new("TextLabel")
DebugTitle.Parent = DebugFrame
DebugTitle.Size = UDim2.new(1, 0, 0, 30)
DebugTitle.Text = "üîé Scylla Debug Log"
DebugTitle.BackgroundTransparency = 1
DebugTitle.TextColor3 = Color3.fromRGB(80, 50, 0)
DebugTitle.Font = Enum.Font.SourceSansBold
DebugTitle.TextSize = 18

local CopyBtn = Instance.new("TextButton")
CopyBtn.Parent = DebugFrame
CopyBtn.Size = UDim2.new(0, 60, 0, 25)
CopyBtn.Position = UDim2.new(1, -70, 0, 2)
CopyBtn.Text = "Copy"
CopyBtn.BackgroundColor3 = Color3.fromRGB(100, 180, 100)
CopyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyBtn.Font = Enum.Font.SourceSansBold
CopyBtn.TextSize = 14
Instance.new("UICorner", CopyBtn).CornerRadius = UDim.new(0, 8)

DebugScroll = Instance.new("ScrollingFrame")
DebugScroll.Parent = DebugFrame
DebugScroll.Size = UDim2.new(1, 0, 1, -30)
DebugScroll.Position = UDim2.new(0, 0, 0, 30)
DebugScroll.BackgroundTransparency = 1
DebugScroll.CanvasSize = UDim2.new(0, 0, 0, 0)

UIList = Instance.new("UIListLayout", DebugScroll)
UIList.SortOrder = Enum.SortOrder.LayoutOrder

CopyBtn.MouseButton1Click:Connect(function()
    if setclipboard then
        setclipboard(table.concat(debugLines, "\n"))
        debugLog("‚úÖ Debug log copied!", Color3.fromRGB(0, 150, 0))
    else
        debugLog("‚ùå setclipboard ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ô Executor ‡∏ô‡∏µ‡πâ", Color3.fromRGB(200, 0, 0))
    end
end)

-- ================== Button Events ==================
scyllaBtn.MouseButton1Click:Connect(function()
    scyllaMode = not scyllaMode
    if scyllaMode then
        scyllaBtn.Text = "‚öîÔ∏è Scylla Mode : ON"
        scyllaBtn.BackgroundColor3 = Color3.fromRGB(80, 180, 60)
        auroraMode = false
        auroraBtn.Text = "üåå Aurora Mode : OFF"
        auroraBtn.BackgroundColor3 = Color3.fromRGB(50, 120, 50)
    else
        scyllaBtn.Text = "‚öîÔ∏è Scylla Mode : OFF"
        scyllaBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    end
end)

auroraBtn.MouseButton1Click:Connect(function()
    auroraMode = not auroraMode
    if auroraMode then
        auroraBtn.Text = "üåå Aurora Mode : ON"
        auroraBtn.BackgroundColor3 = Color3.fromRGB(80, 180, 60)
        scyllaMode = false
        scyllaBtn.Text = "‚öîÔ∏è Scylla Mode : OFF"
        scyllaBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    else
        auroraBtn.Text = "üåå Aurora Mode : OFF"
        auroraBtn.BackgroundColor3 = Color3.fromRGB(50, 120, 50)
    end
end)

debugBtn.MouseButton1Click:Connect(function()
    debugVisible = not debugVisible
    debugBtn.Text = debugVisible and "Debug: ON" or "Debug: OFF"
    DebugFrame.Visible = debugVisible
end)

-- ================== Game Event ==================
RS.ChildAdded:Connect(function(child)
    if string.find(string.lower(child.Name), "scylla") then
        scyllaActive = true
        debugLog("üëÄ ‡∏û‡∏ö Scylla")
    end
end)

RS.ChildRemoved:Connect(function(child)
    if string.find(string.lower(child.Name), "scylla") then
        scyllaActive = false
        debugLog("‚ùå Scylla ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
    end
end)

RS:WaitForChild("cycle_weatherstimeofday").Changed:Connect(function(val)
    isDay = (val == "Day")
    debugLog("‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô: " .. val)
end)

-- ================== Main Loop ==================
task.spawn(function()
    while true do
        if scyllaMode then
            if not scyllaActive then
                useItem(sundialName)
                debugLog("üîÑ ‡πÑ‡∏°‡πà‡∏°‡∏µ Scylla ‚Üí Sundial")
            else
                equipItem(rodKeyword)
                debugLog("üé£ ‡∏û‡∏ö Scylla ‚Üí ‡∏ñ‡∏∑‡∏≠ Rod")
                repeat task.wait() until not scyllaMode or not scyllaActive
            end
        elseif auroraMode then
            if not scyllaActive then
                useItem(sundialName)
                debugLog("(Aurora) üîÑ ‡πÑ‡∏°‡πà‡∏°‡∏µ Scylla ‚Üí Sundial")
            else
                debugLog("üëÄ ‡∏û‡∏ö Scylla ‚Üí ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥")
                task.wait(15)
                if isDay then
                    debugLog("‚òÄÔ∏è ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô ‚Üí ‡πÉ‡∏ä‡πâ Sundial")
                    useItem(sundialName)
                    task.wait(15)
                    if not isDay then
                        debugLog("üåô ‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡πÉ‡∏ä‡πâ Aurora Totem")
                        useItem(auroraName)
                        equipItem(rodKeyword)
                    end
                else
                    debugLog("üåô ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô ‚Üí ‡πÉ‡∏ä‡πâ Aurora Totem")
                    useItem(auroraName)
                    equipItem(rodKeyword)
                end
                repeat task.wait() until not auroraMode or not scyllaActive
            end
        end
        task.wait(1)
    end
end)
