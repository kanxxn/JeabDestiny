-- üê• ‡∏Å‡∏π‡∏à‡∏∞‡∏•‡πà‡∏≤‡πÅ‡∏ö‡πâ (Auto Scylla + Aurora + Debug) üê•
-- Made By Jeab üê•

local sundialName = "Sundial Totem"
local auroraName = "Aurora Totem"
local rodKeyword = "Rod Of The Zenith"

local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer

local isRunning = false
local scyllaActive = false
local debugVisible = false
local auroraMode = false -- ‚úÖ Checkbox Aurora Mode

-- Debug Log
local debugLines = {}
local maxLogs = 50

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°
local function useItem(itemName)
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = char:WaitForChild("Humanoid")
    local tool = char:FindFirstChildOfClass("Tool")

    if tool and string.find(tool.Name, itemName) then
        tool:Activate()
        return true
    end

    local backpack = LocalPlayer.Backpack
    for _, toolInBackpack in pairs(backpack:GetChildren()) do
        if string.find(toolInBackpack.Name, itemName) then
            humanoid:EquipTool(toolInBackpack)
            task.wait()
            toolInBackpack:Activate()
            return true
        end
    end
    return false
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏•‡∏±‡∏ö‡∏ñ‡∏∑‡∏≠
local function equipItem(itemKeyword)
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = char:WaitForChild("Humanoid")
    local tool = char:FindFirstChildOfClass("Tool")

    if tool and string.find(tool.Name, itemKeyword) then
        return true
    end

    local backpack = LocalPlayer.Backpack
    for _, toolInBackpack in pairs(backpack:GetChildren()) do
        if string.find(toolInBackpack.Name, itemKeyword) then
            humanoid:EquipTool(toolInBackpack)
            return true
        end
    end
    return false
end

-- Detect Aurora Active (‡∏à‡∏≤‡∏Å‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á‡∏°‡∏µ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô Aurora)
local function isAuroraActive()
    local statusUI = LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("StatusUI")
    if statusUI and statusUI:FindFirstChild("AuroraActive") then
        return statusUI.AuroraActive.Visible
    end
    return false
end

-- Detect Day/Night
local function isNight()
    local time = Lighting.ClockTime
    return (time >= 18 or time < 6)
end

-- ================== GUI ‡∏´‡∏•‡∏±‡∏Å ==================
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- Frame ‡∏´‡∏•‡∏±‡∏Å
local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0,220,0,180)
Frame.Position = UDim2.new(0.05,0,0.25,0)
Frame.BackgroundColor3 = Color3.fromRGB(40,20,60) -- ‡∏°‡πà‡∏ß‡∏á‡πÄ‡∏Ç‡πâ‡∏°
Frame.Active = true
Frame.Draggable = true
Frame.BorderSizePixel = 0
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0,12)

-- Title
local Title = Instance.new("TextLabel")
Title.Parent = Frame
Title.Size = UDim2.new(1,0,0,30)
Title.BackgroundTransparency = 1
Title.Text = "üê• ‡∏Å‡∏π‡∏à‡∏∞‡∏•‡πà‡∏≤‡πÅ‡∏ö‡πâ üê•"
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18
Title.TextColor3 = Color3.fromRGB(255,230,0)

-- Toggle Button
local ToggleBtn = Instance.new("TextButton")
ToggleBtn.Parent = Frame
ToggleBtn.Size = UDim2.new(0,150,0,40)
ToggleBtn.Position = UDim2.new(0.5,-75,0.5,-30)
ToggleBtn.Text = "‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
ToggleBtn.BackgroundColor3 = Color3.fromRGB(220,80,40)
ToggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
ToggleBtn.Font = Enum.Font.SourceSansBold
ToggleBtn.TextSize = 18
Instance.new("UICorner", ToggleBtn).CornerRadius = UDim.new(0,10)

-- Aurora Checkbox
local AuroraCheck = Instance.new("TextButton")
AuroraCheck.Parent = Frame
AuroraCheck.Size = UDim2.new(0,180,0,30)
AuroraCheck.Position = UDim2.new(0.5,-90,0.5,20)
AuroraCheck.Text = "‚ñ° üéá ‡∏ï‡∏Å‡∏õ‡∏•‡∏≤‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ Aurora"
AuroraCheck.BackgroundColor3 = Color3.fromRGB(80,40,120)
AuroraCheck.TextColor3 = Color3.fromRGB(255,255,255)
AuroraCheck.Font = Enum.Font.SourceSans
AuroraCheck.TextSize = 16
Instance.new("UICorner", AuroraCheck).CornerRadius = UDim.new(0,8)

-- Debug Button
local DebugBtn = Instance.new("TextButton")
DebugBtn.Parent = Frame
DebugBtn.Size = UDim2.new(0,60,0,25)
DebugBtn.Position = UDim2.new(0,10,1,-35)
DebugBtn.Text = "Debug"
DebugBtn.BackgroundColor3 = Color3.fromRGB(100,100,200)
DebugBtn.TextColor3 = Color3.fromRGB(255,255,255)
Instance.new("UICorner", DebugBtn).CornerRadius = UDim.new(0,8)

-- Made By
local MadeBy = Instance.new("TextLabel")
MadeBy.Parent = Frame
MadeBy.Size = UDim2.new(1,0,0,20)
MadeBy.Position = UDim2.new(0,0,1,-20)
MadeBy.BackgroundTransparency = 1
MadeBy.Text = "Made By Jeab üê•"
MadeBy.TextColor3 = Color3.fromRGB(200,180,255)
MadeBy.Font = Enum.Font.SourceSansItalic
MadeBy.TextSize = 14

-- Debug Frame
local DebugFrame = Instance.new("Frame")
DebugFrame.Parent = ScreenGui
DebugFrame.Size = UDim2.new(0,280,0,180)
DebugFrame.Position = UDim2.new(0.7,0,0.25,0)
DebugFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
DebugFrame.Visible = false
Instance.new("UICorner", DebugFrame).CornerRadius = UDim.new(0,10)

local DebugScroll = Instance.new("ScrollingFrame")
DebugScroll.Parent = DebugFrame
DebugScroll.Size = UDim2.new(1,0,1,0)
DebugScroll.BackgroundTransparency = 1
DebugScroll.CanvasSize = UDim2.new(0,0,0,0)

local UIList = Instance.new("UIListLayout", DebugScroll)
UIList.SortOrder = Enum.SortOrder.LayoutOrder

-- Debug Log
local function debugLog(msg, color)
    if not debugVisible then return end
    table.insert(debugLines, msg)
    if #debugLines > maxLogs then
        table.remove(debugLines,1)
        if DebugScroll:FindFirstChildOfClass("TextLabel") then
            DebugScroll:FindFirstChildOfClass("TextLabel"):Destroy()
        end
    end
    local line = Instance.new("TextLabel")
    line.Size = UDim2.new(1,0,0,20)
    line.Text = msg
    line.TextColor3 = color or Color3.fromRGB(255,255,255)
    line.BackgroundTransparency = 1
    line.TextXAlignment = Enum.TextXAlignment.Left
    line.Parent = DebugScroll
    DebugScroll.CanvasSize = UDim2.new(0,0,0,UIList.AbsoluteContentSize.Y)
    DebugScroll.CanvasPosition = Vector2.new(0, DebugScroll.CanvasSize.Y.Offset)
end

-- Button Events
ToggleBtn.MouseButton1Click:Connect(function()
    isRunning = not isRunning
    if isRunning then
        ToggleBtn.Text = "‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
        ToggleBtn.BackgroundColor3 = Color3.fromRGB(80,180,60)
        debugLog("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", Color3.fromRGB(0,255,0))
    else
        ToggleBtn.Text = "‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
        ToggleBtn.BackgroundColor3 = Color3.fromRGB(220,80,40)
        debugLog("‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", Color3.fromRGB(255,0,0))
    end
end)

AuroraCheck.MouseButton1Click:Connect(function()
    auroraMode = not auroraMode
    AuroraCheck.Text = (auroraMode and "‚òë üéá ‡∏ï‡∏Å‡∏õ‡∏•‡∏≤‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ Aurora" or "‚ñ° üéá ‡∏ï‡∏Å‡∏õ‡∏•‡∏≤‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ Aurora")
end)

DebugBtn.MouseButton1Click:Connect(function()
    debugVisible = not debugVisible
    DebugFrame.Visible = debugVisible
end)

-- Detect Scylla
workspace.ChildAdded:Connect(function(child)
    if string.find(string.lower(child.Name), "scylla") then
        scyllaActive = true
        debugLog("‡∏û‡∏ö Scylla ‚Üí ‡∏ñ‡∏∑‡∏≠ Rod", Color3.fromRGB(255,50,50))
        equipItem(rodKeyword)
    end
end)

workspace.ChildRemoved:Connect(function(child)
    if string.find(string.lower(child.Name), "scylla") then
        scyllaActive = false
        debugLog("Scylla ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡πÉ‡∏ä‡πâ Sundial", Color3.fromRGB(255,200,0))
        useItem(sundialName)
    end
end)

-- Main Loop
task.spawn(function()
    while true do
        if isRunning then
            if not scyllaActive then
                if auroraMode and isNight() and isAuroraActive() then
                    equipItem(rodKeyword) -- ‚úÖ ‡∏ï‡∏Å‡∏õ‡∏•‡∏≤‡∏ï‡πà‡∏≠‡∏ñ‡πâ‡∏≤‡∏°‡∏µ Aurora Active
                    debugLog("üåå Aurora Active ‚Üí ‡∏ï‡∏Å‡∏õ‡∏•‡∏≤‡∏ï‡πà‡∏≠", Color3.fromRGB(0,200,255))
                else
                    useItem(sundialName)
                end
            else
                equipItem(rodKeyword)
                repeat task.wait() until not isRunning or not scyllaActive
            end
        end
        task.wait(1)
    end
end)
